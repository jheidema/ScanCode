#ifndef VandleEff_h
#define VandleEff_h

#include <cmath>
#include "TGraph.h"
#include "TGraphErrors.h"

namespace Efficiencies{

    static TGraph* VandleBeamEff(void){ //input MeV
    double en[] = {0.0225, 0.0700, 0.1200, 0.1700, 0.2200, 0.2700, 0.3200, 0.3700, 0.4200, 0.4700, 0.5200, 0.5700, 0.6200, 0.6700, 0.7200, 0.7700, 0.8200, 0.8700, 0.9200, 0.9700, 1.0200, 1.0700, 1.1200, 1.1700, 1.2200, 1.2700, 1.3200, 1.3700, 1.4200, 1.4700, 1.5200, 1.5700, 1.6200, 1.6700, 1.7200, 1.7700, 1.8200, 1.8700, 1.9200, 1.9700, 2.0200, 2.0700, 2.1200, 2.1700, 2.2200, 2.2700, 2.3200, 2.3700, 2.4200, 2.4700, 2.5200, 2.5700, 2.6200, 2.6700, 2.7200, 2.7700, 2.8200, 2.8700, 2.9200, 2.9700, 3.0200, 3.0700, 3.1200, 3.1700, 3.2200, 3.2705, 3.3220, 3.3745, 3.4280, 3.4830, 3.5390, 3.5965, 3.6555, 3.7155, 3.7775, 3.8410, 3.9060, 3.9725, 4.0405, 4.1105, 4.1825, 4.2565, 4.3320, 4.4095, 4.4890, 4.5705, 4.6545, 4.7410, 4.8300, 4.9210, 5.0145, 5.1110, 5.2100, 5.3120, 5.4170, 5.5250, 5.6360, 5.7505, 5.8690, 5.9905, 6.1160, 6.2455, 6.3790, 6.5170, 6.6590, 6.8060, 6.9580, 7.1150, 7.2775, 7.4450, 7.6185, 7.7985, 7.9845, 8.1770, 8.3770, 8.5845, 8.7995, 9.0225, 9.2540, 9.4945, 9.7445, 10.0050, 10.2760, 10.5580, 10.8510, 11.1560, 11.4750, 11.8080, 12.1550, 12.5180, 12.8970, 13.2940};
    double neff[] = {0.0, 0.0, 0.0, 0.0, 60.6, 57.6, 41.0, 46.5, 36.3, 39.2, 37.8, 34.2, 35.3, 37.8, 34.4, 36.7, 35.2, 35.3, 36.9, 32.4, 30.0, 34.3, 31.7, 30.6, 30.8, 34.8, 28.5, 30.8, 27.4, 31.4, 29.0, 27.6, 28.1, 28.8, 27.9, 24.3, 26.7, 31.2, 29.3, 27.2, 29.5, 28.6, 29.8, 27.9, 25.3, 27.1, 27.5, 27.8, 26.4, 26.8, 28.8, 27.7, 25.1, 26.8, 23.3, 27.7, 27.9, 25.3, 27.3, 22.8, 25.5, 21.5, 26.3, 25.9, 25.5, 23.8, 22.3, 24.4, 26.9, 23.2, 24.6, 21.1, 23.3, 22.9, 24.2, 28.8, 24.4, 26.7, 24.5, 23.8, 22.7, 20.0, 20.2, 22.4, 19.5, 20.1, 23.0, 23.0, 21.2, 22.1, 20.6, 19.6, 21.0, 18.8, 17.4, 17.2, 18.8, 21.4, 19.7, 19.8, 20.4, 18.5, 20.1, 18.5, 18.3, 17.3, 18.7, 18.3, 15.2, 17.7, 22.2, 18.2, 17.4, 12.6, 15.8, 16.0, 15.2, 14.2, 15.9, 12.9, 10.4, 15.3, 14.3, 19.3, 19.8, 14.4, 14.1, 14.1, 18.5, 18.5, 15.2, 15.6};

    TGraph *geff = new TGraph(132,en,neff);
    return geff;
    }

    static TGraph* VandleBeamErr(void){ //input MeV
    double en[] = {0.0225, 0.0700, 0.1200, 0.1700, 0.2200, 0.2700, 0.3200, 0.3700, 0.4200, 0.4700, 0.5200, 0.5700, 0.6200, 0.6700, 0.7200, 0.7700, 0.8200, 0.8700, 0.9200, 0.9700, 1.0200, 1.0700, 1.1200, 1.1700, 1.2200, 1.2700, 1.3200, 1.3700, 1.4200, 1.4700, 1.5200, 1.5700, 1.6200, 1.6700, 1.7200, 1.7700, 1.8200, 1.8700, 1.9200, 1.9700, 2.0200, 2.0700, 2.1200, 2.1700, 2.2200, 2.2700, 2.3200, 2.3700, 2.4200, 2.4700, 2.5200, 2.5700, 2.6200, 2.6700, 2.7200, 2.7700, 2.8200, 2.8700, 2.9200, 2.9700, 3.0200, 3.0700, 3.1200, 3.1700, 3.2200, 3.2705, 3.3220, 3.3745, 3.4280, 3.4830, 3.5390, 3.5965, 3.6555, 3.7155, 3.7775, 3.8410, 3.9060, 3.9725, 4.0405, 4.1105, 4.1825, 4.2565, 4.3320, 4.4095, 4.4890, 4.5705, 4.6545, 4.7410, 4.8300, 4.9210, 5.0145, 5.1110, 5.2100, 5.3120, 5.4170, 5.5250, 5.6360, 5.7505, 5.8690, 5.9905, 6.1160, 6.2455, 6.3790, 6.5170, 6.6590, 6.8060, 6.9580, 7.1150, 7.2775, 7.4450, 7.6185, 7.7985, 7.9845, 8.1770, 8.3770, 8.5845, 8.7995, 9.0225, 9.2540, 9.4945, 9.7445, 10.0050, 10.2760, 10.5580, 10.8510, 11.1560, 11.4750, 11.8080, 12.1550, 12.5180, 12.8970, 13.2940};
    double nerr[] = {0.0, 0.0, 0.0, 0.0, 45.6, 25.8, 10.8, 11.6, 7.3, 7.5, 6.0, 4.5, 4.4, 4.8, 4.1, 4.6, 4.1, 3.9, 3.8, 3.1, 3.0, 3.5, 3.1, 2.7, 2.7, 3.4, 2.5, 2.8, 2.3, 2.8, 2.5, 2.3, 2.3, 2.4, 2.3, 1.8, 2.2, 2.8, 2.5, 2.2, 2.5, 2.4, 2.6, 2.4, 2.1, 2.3, 2.5, 2.6, 2.3, 2.5, 2.9, 2.6, 2.3, 2.5, 2.1, 2.8, 3.0, 2.5, 2.8, 2.2, 2.7, 2.1, 2.9, 2.9, 2.9, 2.5, 2.2, 2.5, 2.9, 2.3, 2.6, 2.0, 2.3, 2.3, 2.6, 3.4, 2.6, 3.2, 2.7, 2.6, 2.5, 2.0, 2.2, 2.6, 2.0, 2.2, 2.7, 2.7, 2.5, 2.6, 2.6, 2.4, 2.7, 2.4, 2.1, 2.0, 2.6, 3.0, 2.6, 2.8, 2.7, 2.3, 2.9, 2.6, 2.4, 2.3, 2.8, 2.5, 2.1, 2.4, 3.4, 2.7, 2.7, 2.2, 2.9, 3.4, 3.4, 3.2, 3.6, 3.7, 2.8, 4.1, 3.9, 5.3, 6.3, 4.0, 3.8, 4.0, 4.3, 5.8, 4.5, 5.9};

    TGraph *gerr = new TGraph(132,en,nerr);
    return gerr;
    }


    static TGraphErrors* VandleBeamEffErr(void){
    double en[] = {0.0225, 0.0700, 0.1200, 0.1700, 0.2200, 0.2700, 0.3200, 0.3700, 0.4200, 0.4700, 0.5200, 0.5700, 0.6200, 0.6700, 0.7200, 0.7700, 0.8200, 0.8700, 0.9200, 0.9700, 1.0200, 1.0700, 1.1200, 1.1700, 1.2200, 1.2700, 1.3200, 1.3700, 1.4200, 1.4700, 1.5200, 1.5700, 1.6200, 1.6700, 1.7200, 1.7700, 1.8200, 1.8700, 1.9200, 1.9700, 2.0200, 2.0700, 2.1200, 2.1700, 2.2200, 2.2700, 2.3200, 2.3700, 2.4200, 2.4700, 2.5200, 2.5700, 2.6200, 2.6700, 2.7200, 2.7700, 2.8200, 2.8700, 2.9200, 2.9700, 3.0200, 3.0700, 3.1200, 3.1700, 3.2200, 3.2705, 3.3220, 3.3745, 3.4280, 3.4830, 3.5390, 3.5965, 3.6555, 3.7155, 3.7775, 3.8410, 3.9060, 3.9725, 4.0405, 4.1105, 4.1825, 4.2565, 4.3320, 4.4095, 4.4890, 4.5705, 4.6545, 4.7410, 4.8300, 4.9210, 5.0145, 5.1110, 5.2100, 5.3120, 5.4170, 5.5250, 5.6360, 5.7505, 5.8690, 5.9905, 6.1160, 6.2455, 6.3790, 6.5170, 6.6590, 6.8060, 6.9580, 7.1150, 7.2775, 7.4450, 7.6185, 7.7985, 7.9845, 8.1770, 8.3770, 8.5845, 8.7995, 9.0225, 9.2540, 9.4945, 9.7445, 10.0050, 10.2760, 10.5580, 10.8510, 11.1560, 11.4750, 11.8080, 12.1550, 12.5180, 12.8970, 13.2940};
    double neff[] = {0.0, 0.0, 0.0, 0.0, 60.6, 57.6, 41.0, 46.5, 36.3, 39.2, 37.8, 34.2, 35.3, 37.8, 34.4, 36.7, 35.2, 35.3, 36.9, 32.4, 30.0, 34.3, 31.7, 30.6, 30.8, 34.8, 28.5, 30.8, 27.4, 31.4, 29.0, 27.6, 28.1, 28.8, 27.9, 24.3, 26.7, 31.2, 29.3, 27.2, 29.5, 28.6, 29.8, 27.9, 25.3, 27.1, 27.5, 27.8, 26.4, 26.8, 28.8, 27.7, 25.1, 26.8, 23.3, 27.7, 27.9, 25.3, 27.3, 22.8, 25.5, 21.5, 26.3, 25.9, 25.5, 23.8, 22.3, 24.4, 26.9, 23.2, 24.6, 21.1, 23.3, 22.9, 24.2, 28.8, 24.4, 26.7, 24.5, 23.8, 22.7, 20.0, 20.2, 22.4, 19.5, 20.1, 23.0, 23.0, 21.2, 22.1, 20.6, 19.6, 21.0, 18.8, 17.4, 17.2, 18.8, 21.4, 19.7, 19.8, 20.4, 18.5, 20.1, 18.5, 18.3, 17.3, 18.7, 18.3, 15.2, 17.7, 22.2, 18.2, 17.4, 12.6, 15.8, 16.0, 15.2, 14.2, 15.9, 12.9, 10.4, 15.3, 14.3, 19.3, 19.8, 14.4, 14.1, 14.1, 18.5, 18.5, 15.2, 15.6};
    double eerr[] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00};
    double nerr[] = {0.0, 0.0, 0.0, 0.0, 45.6, 25.8, 10.8, 11.6, 7.3, 7.5, 6.0, 4.5, 4.4, 4.8, 4.1, 4.6, 4.1, 3.9, 3.8, 3.1, 3.0, 3.5, 3.1, 2.7, 2.7, 3.4, 2.5, 2.8, 2.3, 2.8, 2.5, 2.3, 2.3, 2.4, 2.3, 1.8, 2.2, 2.8, 2.5, 2.2, 2.5, 2.4, 2.6, 2.4, 2.1, 2.3, 2.5, 2.6, 2.3, 2.5, 2.9, 2.6, 2.3, 2.5, 2.1, 2.8, 3.0, 2.5, 2.8, 2.2, 2.7, 2.1, 2.9, 2.9, 2.9, 2.5, 2.2, 2.5, 2.9, 2.3, 2.6, 2.0, 2.3, 2.3, 2.6, 3.4, 2.6, 3.2, 2.7, 2.6, 2.5, 2.0, 2.2, 2.6, 2.0, 2.2, 2.7, 2.7, 2.5, 2.6, 2.6, 2.4, 2.7, 2.4, 2.1, 2.0, 2.6, 3.0, 2.6, 2.8, 2.7, 2.3, 2.9, 2.6, 2.4, 2.3, 2.8, 2.5, 2.1, 2.4, 3.4, 2.7, 2.7, 2.2, 2.9, 3.4, 3.4, 3.2, 3.6, 3.7, 2.8, 4.1, 3.9, 5.3, 6.3, 4.0, 3.8, 4.0, 4.3, 5.8, 4.5, 5.9};

    TGraphErrors *gErr = new TGraphErrors(132,en,neff,eerr,nerr);
    return gErr;
    }

    static TGraph* VandleSourceEff(void){ //input MeV
    double en[] = {0.025, 0.045, 0.065, 0.085, 0.105, 0.125, 0.15, 0.18, 0.21, 0.24, 0.28, 0.33, 0.38, 0.43, 0.48, 0.53, 0.58, 0.63, 0.68, 0.73, 0.78, 0.83, 0.88, 0.93, 1.0025, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.05, 2.25, 2.45, 2.65, 2.85, 3.1, 3.4, 3.7, 3.7775, 3.8410, 3.9060, 3.9725, 4.0405, 4.1105, 4.1825, 4.2565, 4.3320, 4.4095, 4.4890, 4.5705, 4.6545, 4.7410, 4.8300, 4.9210, 5.0145, 5.1110, 5.2100, 5.3120, 5.4170, 5.5250, 5.6360, 5.7505, 5.8690, 5.9905, 6.1160, 6.2455, 6.3790, 6.5170, 6.6590, 6.8060, 6.9580, 7.1150, 7.2775, 7.4450, 7.6185, 7.7985, 7.9845, 8.1770, 8.3770, 8.5845, 8.7995, 9.0225, 9.2540, 9.4945, 9.7445, 10.0050, 10.2760, 10.5580, 10.8510, 11.1560, 11.4750, 11.8080, 12.1550, 12.5180, 12.8970, 13.2940};
    double neff[] = {0, 0, 0, 0.92, 4.16, 14.58, 21.49, 29.76, 36.19, 41.46, 45.45, 48.83, 49.12, 46.72, 46.12, 45.77, 43.77, 43.37, 42.98, 41.13, 39.65, 38.52, 37.44, 37.14, 35.48, 34.3, 34.02, 32.35, 31.45, 31.45, 30.69, 29.99, 29.24, 29.56, 28.73, 28.12, 27.72, 26.97, 25.72, 25.34, 24.33, 23.54, 24.2, 28.8, 24.4, 26.7, 24.5, 23.8, 22.7, 20.0, 20.2, 22.4, 19.5, 20.1, 23.0, 23.0, 21.2, 22.1, 20.6, 19.6, 21.0, 18.8, 17.4, 17.2, 18.8, 21.4, 19.7, 19.8, 20.4, 18.5, 20.1, 18.5, 18.3, 17.3, 18.7, 18.3, 15.2, 17.7, 22.2, 18.2, 17.4, 12.6, 15.8, 16.0, 15.2, 14.2, 15.9, 12.9, 10.4, 15.3, 14.3, 19.3, 19.8, 14.4, 14.1, 14.1, 18.5, 18.5, 15.2, 15.6};

    TGraph *geff = new TGraph(100,en,neff);
    return geff;
    }


    static TGraph* VandleSourceErr(void){ //input MeV
    double en[] = {0.025, 0.045, 0.065, 0.085, 0.105, 0.125, 0.15, 0.18, 0.21, 0.24, 0.28, 0.33, 0.38, 0.43, 0.48, 0.53, 0.58, 0.63, 0.68, 0.73, 0.78, 0.83, 0.88, 0.93, 1.0025, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.05, 2.25, 2.45, 2.65, 2.85, 3.1, 3.4, 3.7, 3.7775, 3.8410, 3.9060, 3.9725, 4.0405, 4.1105, 4.1825, 4.2565, 4.3320, 4.4095, 4.4890, 4.5705, 4.6545, 4.7410, 4.8300, 4.9210, 5.0145, 5.1110, 5.2100, 5.3120, 5.4170, 5.5250, 5.6360, 5.7505, 5.8690, 5.9905, 6.1160, 6.2455, 6.3790, 6.5170, 6.6590, 6.8060, 6.9580, 7.1150, 7.2775, 7.4450, 7.6185, 7.7985, 7.9845, 8.1770, 8.3770, 8.5845, 8.7995, 9.0225, 9.2540, 9.4945, 9.7445, 10.0050, 10.2760, 10.5580, 10.8510, 11.1560, 11.4750, 11.8080, 12.1550, 12.5180, 12.8970, 13.2940};
    double nerr[] = {0, 0, 0, 23.99, 16, 11.52, 8.16, 5.88, 4.55, 3.68, 2.89, 2.37, 2.05, 1.81, 1.66, 1.59, 1.48, 1.38, 1.38, 1.34, 1.26, 1.21, 1.19, 1.13, 1.02, 0.91, 0.89, 0.85, 0.82, 0.82, 0.8, 0.8, 0.77, 0.78, 0.73, 0.7, 0.7, 0.69, 0.67, 0.65, 0.64, 0.63, 2.6, 3.4, 2.6, 3.2, 2.7, 2.6, 2.5, 2.0, 2.2, 2.6, 2.0, 2.2, 2.7, 2.7, 2.5, 2.6, 2.6, 2.4, 2.7, 2.4, 2.1, 2.0, 2.6, 3.0, 2.6, 2.8, 2.7, 2.3, 2.9, 2.6, 2.4, 2.3, 2.8, 2.5, 2.1, 2.4, 3.4, 2.7, 2.7, 2.2, 2.9, 3.4, 3.4, 3.2, 3.6, 3.7, 2.8, 4.1, 3.9, 5.3, 6.3, 4.0, 3.8, 4.0, 4.3, 5.8, 4.5, 5.9};

    TGraph *gerr = new TGraph(100,en,nerr);
    return gerr;
    }

    static TGraphErrors* VandleSourceEffErr(void){
    double en[] = {0.025, 0.045, 0.065, 0.085, 0.105, 0.125, 0.15, 0.18, 0.21, 0.24, 0.28, 0.33, 0.38, 0.43, 0.48, 0.53, 0.58, 0.63, 0.68, 0.73, 0.78, 0.83, 0.88, 0.93, 1.0025, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.05, 2.25, 2.45, 2.65, 2.85, 3.1, 3.4, 3.7, 3.7775, 3.8410, 3.9060, 3.9725, 4.0405, 4.1105, 4.1825, 4.2565, 4.3320, 4.4095, 4.4890, 4.5705, 4.6545, 4.7410, 4.8300, 4.9210, 5.0145, 5.1110, 5.2100, 5.3120, 5.4170, 5.5250, 5.6360, 5.7505, 5.8690, 5.9905, 6.1160, 6.2455, 6.3790, 6.5170, 6.6590, 6.8060, 6.9580, 7.1150, 7.2775, 7.4450, 7.6185, 7.7985, 7.9845, 8.1770, 8.3770, 8.5845, 8.7995, 9.0225, 9.2540, 9.4945, 9.7445, 10.0050, 10.2760, 10.5580, 10.8510, 11.1560, 11.4750, 11.8080, 12.1550, 12.5180, 12.8970, 13.2940};
    double neff[] = {0, 0, 0, 0.92, 4.16, 14.58, 21.49, 29.76, 36.19, 41.46, 45.45, 48.83, 49.12, 46.72, 46.12, 45.77, 43.77, 43.37, 42.98, 41.13, 39.65, 38.52, 37.44, 37.14, 35.48, 34.3, 34.02, 32.35, 31.45, 31.45, 30.69, 29.99, 29.24, 29.56, 28.73, 28.12, 27.72, 26.97, 25.72, 25.34, 24.33, 23.54, 24.2, 28.8, 24.4, 26.7, 24.5, 23.8, 22.7, 20.0, 20.2, 22.4, 19.5, 20.1, 23.0, 23.0, 21.2, 22.1, 20.6, 19.6, 21.0, 18.8, 17.4, 17.2, 18.8, 21.4, 19.7, 19.8, 20.4, 18.5, 20.1, 18.5, 18.3, 17.3, 18.7, 18.3, 15.2, 17.7, 22.2, 18.2, 17.4, 12.6, 15.8, 16.0, 15.2, 14.2, 15.9, 12.9, 10.4, 15.3, 14.3, 19.3, 19.8, 14.4, 14.1, 14.1, 18.5, 18.5, 15.2, 15.6};
    double eerr[] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
    double nerr[] = {0, 0, 0, 23.99, 16, 11.52, 8.16, 5.88, 4.55, 3.68, 2.89, 2.37, 2.05, 1.81, 1.66, 1.59, 1.48, 1.38, 1.38, 1.34, 1.26, 1.21, 1.19, 1.13, 1.02, 0.91, 0.89, 0.85, 0.82, 0.82, 0.8, 0.8, 0.77, 0.78, 0.73, 0.7, 0.7, 0.69, 0.67, 0.65, 0.64, 0.63, 2.6, 3.4, 2.6, 3.2, 2.7, 2.6, 2.5, 2.0, 2.2, 2.6, 2.0, 2.2, 2.7, 2.7, 2.5, 2.6, 2.6, 2.4, 2.7, 2.4, 2.1, 2.0, 2.6, 3.0, 2.6, 2.8, 2.7, 2.3, 2.9, 2.6, 2.4, 2.3, 2.8, 2.5, 2.1, 2.4, 3.4, 2.7, 2.7, 2.2, 2.9, 3.4, 3.4, 3.2, 3.6, 3.7, 2.8, 4.1, 3.9, 5.3, 6.3, 4.0, 3.8, 4.0, 4.3, 5.8, 4.5, 5.9};
    
    TGraphErrors *gErr = new TGraphErrors(100,en,neff,eerr,nerr);
    return gErr;
    }


}
#endif